#+STARTUP: showall

* Repositories

  | /srv/repo/genorama.git             | MAIN WEB            |
  | ${HOME}/[YUR_REPO_genorama]        | Working WEB         |
  | /var/genorama/web_side/release-0.1 | Web Release 0.1     |
  | /var/genorama/web_side/stable      | Link stable release |

* Simple Git configurations

#+BEGIN_SRC bash
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git config --global color.ui true
#+END_SRC

* A Working Day
** Get a new working folder
#+BEGIN_SRC bash
cd ${HOME}/[WORKING DIR]
git clone /srv/repo/genorama.git
#+END_SRC

** Edit in the working folder
#+BEGIN_SRC bash
git pull origin
git checkout develop

## edit/develop

## repeat until $(git status) is clear
   ## git add -p
   ## git add [new files]
   ## git commit -m"commit message"

git push origin
#+END_SRC


* Create a new RELEASE 0.A.B

Using VERSION as the new release number:

 - A is the RELEASE version
 - B is the patch level number or 0 if there isn't patches

** Merge Develop to Master
#+BEGIN_SRC bash
VERSION=0.A.B
git checkout develop
git pull origin develop
sed -i "s/VERSION = \".*\"/VERSION = \"${VERSION}\"/g" config.py
git commit -a -m"Advance version number ${VERSION}"
git checkout master
git merge --no-ff develop
git tag -a ${VERSION} -m"Release ${VERSION}"
git push origin master
git push --tags origin master
#+END_SRC


* Deploy a new RELEASE

Using VERSION as the desired release to deploy:

** Get a stable version of code in new folder
#+BEGIN_SRC bash
VERSION=0.A.B
cd /var/genorama/web_side
git archive -v -9 --format=tar.gz --prefix release-${VERSION}/ --remote /srv/repo/genorama.git ${VERSION} | tar -xzf -
#+END_SRC
** Change Local confir
** Stop current Server
There is a down.py program that show a simple 'down' page instead of normal page.

** Update/Copy Database
The FINAL Database is stored on /var/genorama/web_side/db/ . The web application
should point to these databases changing the values on ./config.py file.

** Update links
#+BEGIN_SRC bash
VERSION=0.A.B
rm stable
ln -sf release-${VERSION} stable
#+END_SRC
** Start new Server


* References
** [[http://git-scm.com/documentation][Git Man]]
** [[http://nvie.com/posts/a-successful-git-branching-model/][A Successful Git Model]]
